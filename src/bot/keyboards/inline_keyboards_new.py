"""
–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
"""
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from ...utils.config_utils import get_admin_ids

def create_main_menu(user_id=None):
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = [
        [InlineKeyboardButton("‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ’£÷Ä’°’º’∏÷Ç’¥", callback_data="add_record_menu")],
        [InlineKeyboardButton("üìã ‘∏’∂’ø÷Ä’•’¨ ’©’•÷Ä’©’´’Ø", callback_data="select_sheet")],
        [InlineKeyboardButton("üìä ‘ø’°÷Ä’£’°’æ’´’≥’°’Ø", callback_data="status")],
        [InlineKeyboardButton("üìà ’é’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂", callback_data="stats")],
        [InlineKeyboardButton("üìä ‘∏’∂’ø÷Ä’•’¨ ’°’≤’µ’∏÷Ç’Ω’°’Ø", callback_data="select_spreadsheet")]
    ]
    
    admin_ids = get_admin_ids()
    if user_id and user_id in admin_ids:
        keyboard.append([InlineKeyboardButton("üí∏ ’é’≥’°÷Ä’∂’•÷Ä", callback_data="pay_menu")])
    
    return InlineKeyboardMarkup(keyboard)

def create_add_record_menu():
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ’£÷Ä’°’º’∏÷Ç’¥", callback_data="add_record_select_sheet")],
        [InlineKeyboardButton("‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ‘≤’°÷Å’©’∏’≤’∏÷Ç’¥", callback_data="add_skip_record_select_sheet")],
        [InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_add_record_sheet_selection(sheets_info, record_type):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ª–∏—Å—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    
    Args:
        sheets_info: —Å–ø–∏—Å–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏—Å—Ç–∞—Ö
        record_type: —Ç–∏–ø –∑–∞–ø–∏—Å–∏ ("record" –∏–ª–∏ "skip")
    """
    keyboard = []
    for sheet in sheets_info:
        keyboard.append([InlineKeyboardButton(
            f"üìã {sheet['title']}", 
            callback_data=f"add_{record_type}_sheet_{sheet['title']}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="add_record_menu")])
    return InlineKeyboardMarkup(keyboard)

def create_supplier_choice_keyboard(display_name=None):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"""
    keyboard = []
    if display_name:
        keyboard.append([InlineKeyboardButton(f"üë§ ’ï’£’ø’°’£’∏÷Ä’Æ’•’¨ ’´’¥ ’°’∂’∏÷Ç’∂’® ({display_name})", callback_data="use_my_name")])
    keyboard.append([InlineKeyboardButton(f"üè¢ ’ï’£’ø’°’£’∏÷Ä’Æ’•’¨ ’ñ’´÷Ä’¥’°’µ’´ ’°’∂’∏÷Ç’∂’®", callback_data="use_firm_name")])
    # keyboard.append([InlineKeyboardButton("‚úèÔ∏è ’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•’¨ ’±’•’º÷Ñ’∏’æ", callback_data="manual_input")])
    return InlineKeyboardMarkup(keyboard)

def create_edit_menu(record_id: str, is_admin: bool = False):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("üìÖ ‘±’¥’Ω’°’©’´’æ", callback_data=f"edit_date_{record_id}")],
        [InlineKeyboardButton("üè™ ’Ñ’°’ø’°’Ø’°÷Ä’°÷Ä", callback_data=f"edit_supplier_{record_id}")],
        [InlineKeyboardButton("üß≠ ’à÷Ç’≤’≤’∏÷Ç’©’µ’∏÷Ç’∂", callback_data=f"edit_direction_{record_id}")],
        [InlineKeyboardButton("üìù ’Ü’Ø’°÷Ä’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂", callback_data=f"edit_description_{record_id}")],
        [InlineKeyboardButton("üí∞ ‘≥’∏÷Ç’¥’°÷Ä", callback_data=f"edit_amount_{record_id}")],
        [InlineKeyboardButton("üóë ’ã’∂’ª’•’¨", callback_data=f"delete_{record_id}")],
        [InlineKeyboardButton("‚ùå ’â’•’≤’°÷Ä’Ø’•’¨", callback_data=f"cancel_edit_{record_id}")]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_spreadsheet_selection_keyboard(spreadsheets):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã"""
    keyboard = []
    for spreadsheet in spreadsheets[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 10 —Ç–∞–±–ª–∏—Ü
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏
        name = spreadsheet['name'][:30] + "..." if len(spreadsheet['name']) > 30 else spreadsheet['name']
        keyboard.append([InlineKeyboardButton(
            f"üìä {name}", 
            callback_data=f"spreadsheet_{spreadsheet['id']}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(keyboard)

def create_sheet_selection_keyboard(sheets_info):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ª–∏—Å—Ç–∞"""
    keyboard = []
    for info in sheets_info:
        keyboard.append([InlineKeyboardButton(
            f"üìã {info['title']}", 
            callback_data=f"sheet_{info['title']}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(keyboard)

def create_final_sheet_selection_keyboard(sheets):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ª–∏—Å—Ç–∞"""
    keyboard = []
    for sheet in sheets:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å—Ç—Ä–æ–∫
        sheet_info = f"{sheet['title']} ({sheet['row_count']} —Å—Ç—Ä–æ–∫)"
        keyboard.append([InlineKeyboardButton(
            f"üìã {sheet_info}", 
            callback_data=f"final_sheet_{sheet['title']}"
        )])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è ‘±’≤’µ’∏÷Ç’Ω’°’Ø’∂’•÷Ä’´ ÷Å’∏÷Ç÷Å’°’Ø", callback_data="select_spreadsheet")])
    return InlineKeyboardMarkup(keyboard)

def create_payment_menu_keyboard(users_with_names):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é –ø–ª–∞—Ç–µ–∂–µ–π"""
    keyboard = []
    for user_data in users_with_names:
        display_name = user_data['display_name']
        keyboard.append([InlineKeyboardButton(display_name, callback_data=f"pay_user_{display_name}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(keyboard)

def create_payment_actions_keyboard(display_name):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–µ–π—Å—Ç–≤–∏–π —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏"""
    keyboard = [
        [InlineKeyboardButton("‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ’æ’≥’°÷Ä’∏÷Ç’¥", callback_data=f"add_payment_{display_name}")],
        [InlineKeyboardButton("üìä ’ç’ø’°’∂’°’¨ ’Ω’°’∞’¥’°’∂’´ ’∞’°’∑’æ’•’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂", callback_data=f"get_payment_report_{display_name}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="pay_menu")]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_back_button():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥"""
    return InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è ’Ä’•’ø", callback_data="back_to_menu")]])

def create_reply_menu():
    """–°–æ–∑–¥–∞–µ—Ç Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –º–µ–Ω—é"""
    from telegram import ReplyKeyboardMarkup
    return ReplyKeyboardMarkup([["üìã ’Ñ’•’∂’µ’∏÷Ç"]], resize_keyboard=True)
