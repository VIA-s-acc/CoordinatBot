"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–µ—à–µ–º –ª–∏—Å—Ç–æ–≤
"""
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext

from ...utils.sheets_cache import get_cache_statistics, clear_all_cache, invalidate_spreadsheets_cache
from ...utils.localization import _
from ..keyboards.inline_keyboards import create_back_to_menu_keyboard
from ...config.settings import ADMIN_IDS

logger = logging.getLogger(__name__)

async def cache_management_menu(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–µ—à–µ–º"""
    query = update.callback_query
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
    if user_id not in ADMIN_IDS:
        await query.edit_message_text(
            "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
            reply_markup=create_back_to_menu_keyboard()
        )
        return
    
    keyboard = [
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞", callback_data="cache_stats")],
        [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫–µ—à —Ç–∞–±–ª–∏—Ü", callback_data="refresh_spreadsheets_cache")],
        [InlineKeyboardButton("üóë –û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –∫–µ—à", callback_data="clear_all_cache")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="settings_menu")]
    ]
    
    await query.edit_message_text(
        "üóÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–µ—à–µ–º –ª–∏—Å—Ç–æ–≤\n\n"
        "–ö–µ—à –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–ø–∏—Å–∫–∏ –ª–∏—Å—Ç–æ–≤ –±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API Google Sheets.\n"
        "–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç.",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def show_cache_stats(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞"""
    query = update.callback_query
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
    if user_id not in ADMIN_IDS:
        await query.edit_message_text(
            "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
            reply_markup=create_back_to_menu_keyboard()
        )
        return
    
    try:
        stats = get_cache_statistics()
        
        text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞ –ª–∏—Å—Ç–æ–≤\n\n"
        text += f"üîÑ –ü–µ—Ä–∏–æ–¥ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è: {stats['cache_duration_minutes']} –º–∏–Ω—É—Ç\n"
        text += f"üìä –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {stats['spreadsheets_cached']}\n"
        text += f"üìã –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤: {stats['sheets_cached']}\n\n"
        
        if stats.get('spreadsheets_last_updated'):
            text += f"üìÖ –¢–∞–±–ª–∏—Ü—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {stats['spreadsheets_last_updated']}\n\n"
        
        if stats['sheets_info']:
            text += "üìã –î–µ—Ç–∞–ª–∏ –ø–æ –ª–∏—Å—Ç–∞–º:\n"
            for sheet_info in stats['sheets_info'][:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                text += f"  ‚Ä¢ {sheet_info['title'][:25]}...\n"
                text += f"    –õ–∏—Å—Ç–æ–≤: {sheet_info['sheets_count']}\n"
                text += f"    –û–±–Ω–æ–≤–ª–µ–Ω–æ: {sheet_info['last_updated']}\n"
            
            if len(stats['sheets_info']) > 5:
                text += f"  ... –∏ –µ—â–µ {len(stats['sheets_info']) - 5} —Ç–∞–±–ª–∏—Ü\n"
        
        keyboard = [
            [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="cache_stats")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cache_management")]
        ]
        
        await query.edit_message_text(
            text,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–µ—à–∞: {e}")
        await query.edit_message_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cache_management")]])
        )

async def refresh_spreadsheets_cache(update: Update, context: CallbackContext):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫–µ—à —Ç–∞–±–ª–∏—Ü"""
    query = update.callback_query
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
    if user_id not in ADMIN_IDS:
        await query.edit_message_text(
            "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
            reply_markup=create_back_to_menu_keyboard()
        )
        return
    
    try:
        # –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–µ—à —Ç–∞–±–ª–∏—Ü
        invalidate_spreadsheets_cache()
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à
        from ...utils.sheets_cache import get_cached_spreadsheets
        spreadsheets = get_cached_spreadsheets(force_refresh=True)
        
        keyboard = [
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="cache_stats")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cache_management")]
        ]
        
        await query.edit_message_text(
            f"‚úÖ –ö–µ—à —Ç–∞–±–ª–∏—Ü –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n"
            f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(spreadsheets)} —Ç–∞–±–ª–∏—Ü.",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–µ—à–∞: {e}")
        await query.edit_message_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–µ—à–∞: {e}",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cache_management")]])
        )

async def clear_cache(update: Update, context: CallbackContext):
    """–û—á–∏—â–∞–µ—Ç –≤–µ—Å—å –∫–µ—à"""
    query = update.callback_query
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
    if user_id not in ADMIN_IDS:
        await query.edit_message_text(
            "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω",
            reply_markup=create_back_to_menu_keyboard()
        )
        return
    
    try:
        # –û—á–∏—â–∞–µ–º –∫–µ—à
        clear_all_cache()
        
        keyboard = [
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="cache_stats")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cache_management")]
        ]
        
        await query.edit_message_text(
            "‚úÖ –í–µ—Å—å –∫–µ—à –æ—á–∏—â–µ–Ω!\n\n"
            "–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–∞–Ω–æ–≤–æ.",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–µ—à–∞: {e}")
        await query.edit_message_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–µ—à–∞: {e}",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="cache_management")]])
        )
