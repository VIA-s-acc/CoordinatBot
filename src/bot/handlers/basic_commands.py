"""
–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
"""
import logging
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ path –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__)))))

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
from src.bot.keyboards.inline_keyboards import create_main_menu, create_back_to_menu_keyboard
from src.utils.config_utils import is_user_allowed, get_user_settings, load_users, save_users
from src.config.settings import ADMIN_IDS
from src.database.database_manager import init_db

logger = logging.getLogger(__name__)

def create_reply_menu():
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ Reply-–º–µ–Ω—é"""
    return ReplyKeyboardMarkup([["üìã ’Ñ’•’∂’µ’∏÷Ç"]], resize_keyboard=True)

async def clear_user_data(update: Update, context: CallbackContext):
    """–û—á–∏—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ"""
    if context.user_data:
        context.user_data.clear()

async def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    init_db()
    
    user = update.effective_user
    user_id = user.id
    user_name = user.full_name
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º—É
    users = load_users()
    user_id_str = str(user_id)
    
    if user_id_str not in users:
        users[user_id_str] = {
            'active_spreadsheet_id': None,
            'active_sheet_name': None,
            'name': user_name,
            'display_name': None
        }
        save_users(users)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not is_user_allowed(user_id):
        await update.message.reply_text(
            "‚õîÔ∏è ‘¥’∏÷Ç÷Ñ ’π’∏÷Ç’∂’•÷Ñ ’¥’∏÷Ç’ø÷Ñ’´ ’©’∏÷Ç’µ’¨’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂: ‘±’∂’§÷Ä’°’§’°÷Ä’±’•÷Ñ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´’∂:"
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Reply-–º–µ–Ω—é
    await update.message.reply_text(
        "’ï’£’ø’°’£’∏÷Ä’Æ’•÷Ñ ’Ø’∏’≥’°’Ø’® ’Ω’ø’∏÷Ä÷á’ù ’∞’´’¥’∂’°’Ø’°’∂ ’®’∂’ø÷Ä’°÷Å’°’∂’Ø’® ’¢’°÷Å’•’¨’∏÷Ç ’∞’°’¥’°÷Ä:",
        reply_markup=create_reply_menu()
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    user_settings = get_user_settings(user_id)
    
    welcome_text = (
        f"üëã ‘≤’°÷Ä÷á, {user_name}!\n\n"
        "ü§ñ ‘µ’Ω ’Ø÷Ö’£’∂’•’¥ ’±’•’¶ ’Ø’°’º’°’æ’°÷Ä’•’¨ ’Æ’°’≠’Ω’•÷Ä’® ÷á ’°’∑’≠’°’ø’•’¨ Google Sheets-’´ ’∞’•’ø:\n\n"
        "üìù ‘µ’Ω ’Ø’°÷Ä’∏’≤ ’•’¥’ù\n"
        "‚Ä¢ ‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ’∂’∏÷Ä ’Æ’°’≠’Ω’´ ’£÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä\n"
        "‚Ä¢ ‚úèÔ∏è ‘Ω’¥’¢’°’£÷Ä’•’¨ ÷á ’ª’∂’ª’•’¨ ’£÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä\n"
        "‚Ä¢ üîÑ ’Ä’°’¥’°’™’°’¥’•÷Å’∂’•’¨ ’ø’æ’µ’°’¨’∂’•÷Ä’® Google Sheets-’´ ’∞’•’ø\n"
        "‚Ä¢ üìä ’ë’∏÷Ç÷Å’°’§÷Ä’•’¨ ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ÷á ’∞’°’∑’æ’•’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n"
        "‚Ä¢ üîç ’à÷Ä’∏’∂’•’¨ ’£÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä\n\n"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not user_settings.get('active_spreadsheet_id') or not user_settings.get('active_sheet_name'):
        welcome_text += (
            "‚ö†Ô∏è <b>‘ø’°÷Ä’£’°’æ’∏÷Ä’∏÷Ç’¥ ’°’∂’∞÷Ä’°’™’•’∑’ø ’ß!</b>\n"
            "’ç’Ø’Ω’•’¨’∏÷Ç ’∞’°’¥’°÷Ä ’®’∂’ø÷Ä’•÷Ñ Google Spreadsheet ÷á ’©’•÷Ä’©’´’Ø:\n\n"
        )
    else:
        welcome_text += (
            "‚úÖ <b>‘ø’°÷Ä’£’°’æ’∏÷Ä’∏÷Ç’¥’® ’°’æ’°÷Ä’ø’æ’°’Æ ’ß!</b>\n"
            "‘¥’∏÷Ç÷Ñ ’∫’°’ø÷Ä’°’Ω’ø ’•÷Ñ ’°’∑’≠’°’ø’•’¨:\n\n"
        )
    
    welcome_text += "’ï’£’ø’°’£’∏÷Ä’Æ’•÷Ñ ÷Å’°’∂’Ø’® ’Ω’ø’∏÷Ä÷á’ù ’Ω’Ø’Ω’•’¨’∏÷Ç ’∞’°’¥’°÷Ä:"
    
    await update.message.reply_text(
        welcome_text,
        parse_mode="HTML",
        reply_markup=create_main_menu(user_id)
    )

async def menu_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
    user_id = update.effective_user.id
    if not is_user_allowed(user_id):
        return
    
    await clear_user_data(update, context)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Inline-–º–µ–Ω—é
    await update.message.reply_text(
        "üìã ’Ä’´’¥’∂’°’Ø’°’∂ ’®’∂’ø÷Ä’°÷Å’°’∂’Ø:",
        reply_markup=create_main_menu(user_id)
    )

async def text_menu_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ '–ú–µ–Ω—é'"""
    user_id = update.effective_user.id
    if not is_user_allowed(user_id):
        return
    
    await clear_user_data(update, context)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Inline-–º–µ–Ω—é –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ Reply-–∫–Ω–æ–ø–∫—É
    await update.message.reply_text(
        "üìã ’Ä’´’¥’∂’°’Ø’°’∂ ’®’∂’ø÷Ä’°÷Å’°’∂’Ø:",
        reply_markup=create_main_menu(user_id)
    )

async def help_command(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = update.effective_user.id
    if not is_user_allowed(user_id):
        return
    
    help_text = (
        "üîß <b>’ï’£’∂’∏÷Ç’©’µ’∏÷Ç’∂ - ’Ä’°’Ω’°’∂’•’¨’´ ’∞÷Ä’°’¥’°’∂’∂’•÷Ä:</b>\n\n"
        
        "üë§ <b>’ï’£’ø’°’£’∏÷Ä’Æ’∏’≤’´ ’∞÷Ä’°’¥’°’∂’∂’•÷Ä:</b>\n"
        "‚Ä¢ /start - ‘≤’∏’ø’´ ’Ω’Ø’Ω’∏÷Ç’¥\n"
        "‚Ä¢ /menu - ’Ä’´’¥’∂’°’Ø’°’∂ ’®’∂’ø÷Ä’°÷Å’°’∂’Ø\n"
        "‚Ä¢ /help - ‘±’µ’Ω ÷Ö’£’∂’∏÷Ç’©’µ’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’®\n"
        "‚Ä¢ /search [’ø’•÷Ñ’Ω’ø] - ‘≥÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä’´ ’∏÷Ä’∏’∂’∏÷Ç’¥\n"
        "‚Ä¢ /recent [÷Ñ’°’∂’°’Ø] - ’é’•÷Ä’ª’´’∂ ’£÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä’®\n"
        "‚Ä¢ /info [ID] - ‘≥÷Ä’°’º’¥’°’∂ ’¥’°’∂÷Ä’°’¥’°’Ω’∂ ’ø’•’≤’•’Ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä\n"
        "‚Ä¢ /my_report [’Ω’Ø’´’¶’¢] [’æ’•÷Ä’ª] - ’Å’•÷Ä ’Æ’°’≠’Ω’•÷Ä’´ ’∞’°’∑’æ’•’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂\n\n"
        
        "üè™ <b>‘≥’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä:</b>\n"
        "‚Ä¢ üìã ’Ñ’•’∂’µ’∏÷Ç - ’Ä’´’¥’∂’°’Ø’°’∂ ÷Å’°’∂’Ø\n"
        "‚Ä¢ ‚ûï ‘±’æ’•’¨’°÷Å’∂’•’¨ ’£÷Ä’°’º’∏÷Ç’¥ - ’Ü’∏÷Ä ’Æ’°’≠’Ω’´ ’£÷Ä’°’º’∏÷Ç’¥\n"
        "‚Ä¢ ‚úèÔ∏è ‘Ω’¥’¢’°’£÷Ä’•’¨ - ‘≥÷Ä’°’º’¥’°’∂ ’≠’¥’¢’°’£÷Ä’∏÷Ç’¥\n"
        "‚Ä¢ üîç ’à÷Ä’∏’∂’•’¨ - ‘≥÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä’´ ’∏÷Ä’∏’∂’∏÷Ç’¥\n"
        "‚Ä¢ üìä ’é’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ - ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’æ’´’≥’°’Ø’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂\n\n"
    )
    
    if user_id in ADMIN_IDS:
        help_text += (
            "üë®‚Äçüíº <b>‘±’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´ ’∞÷Ä’°’¥’°’∂’∂’•÷Ä:</b>\n"
            "‚Ä¢ /set_log - ‘≥÷Ä’°’∂÷Å’°’¥’°’ø’µ’°’∂’´ ’π’°’ø’´ ’Ω’°’∞’¥’°’∂’∏÷Ç’¥\n"
            "‚Ä¢ /set_report [sheet_id] [sheet_name] - ’Ä’°’∑’æ’•’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’π’°’ø’´ ’Ω’°’∞’¥’°’∂’∏÷Ç’¥\n"
            "‚Ä¢ /allow_user [user_id] - ’ï’£’ø’°’£’∏÷Ä’Æ’∏’≤’´ ’©’∏÷Ç’µ’¨’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂\n"
            "‚Ä¢ /disallow_user [user_id] - ’ï’£’ø’°’£’∏÷Ä’Æ’∏’≤’´ ’°÷Ä’£’•’¨÷Ñ\n"
            "‚Ä¢ /allowed_users - ‘π’∏÷Ç’µ’¨’°’ø÷Ä’æ’°’Æ ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏’≤’∂’•÷Ä’´ ÷Å’°’∂’Ø\n"
            "‚Ä¢ /set_user_name [user_id] [name] - ’ï’£’ø’°’£’∏÷Ä’Æ’∏’≤’´ ’°’∂’æ’°’∂ ’Ω’°’∞’¥’°’∂’∏÷Ç’¥\n"
            "‚Ä¢ /export - ’è’æ’µ’°’¨’∂’•÷Ä’´ ’°÷Ä’ø’°’∞’°’∂’∏÷Ç’¥\n"
            "‚Ä¢ /sync_sheets - Google Sheets-’´ ’∞’°’¥’°’™’°’¥’•÷Å’∏÷Ç’¥\n"
            "‚Ä¢ /initialize_sheets - ‘≤’∏’¨’∏÷Ä ’°’≤’µ’∏÷Ç’Ω’°’Ø’∂’•÷Ä’´ ’∂’°’≠’°’∫’°’ø÷Ä’°’Ω’ø’∏÷Ç’¥\n\n"
            "‚Ä¢ /send_data_files - ’è’æ’µ’°’¨’∂’•÷Ä’´ ÷Ü’°’µ’¨’•÷Ä’´ ’∏÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´’∂\n"
        )
    
    help_text += (
        "üí° <b>‘Ω’∏÷Ä’∞’∏÷Ç÷Ä’§’∂’•÷Ä:</b>\n"
        "‚Ä¢ ’Ü’°’≠ ’®’∂’ø÷Ä’•÷Ñ Google Spreadsheet ÷á ’©’•÷Ä’©’´’Ø\n"
        "‚Ä¢ ’ï’£’ø’°’£’∏÷Ä’Æ’•÷Ñ ’°’¥’Ω’°’©’´’æ’® YYYY-MM-DD ’±÷á’°’π’°÷É’∏’æ\n"
        "‚Ä¢ ‘≥’∏÷Ç’¥’°÷Ä’∂’•÷Ä’® ’¥’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’©’æ’•÷Ä’∏’æ (÷Ö÷Ä’´’∂’°’Ø’ù 1000.50)\n"
        "‚Ä¢ ’ï’£’ø’°’£’∏÷Ä’Æ’•÷Ñ /cancel’ù ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’® ’π’•’≤’°÷Ä’Ø’•’¨’∏÷Ç ’∞’°’¥’°÷Ä\n\n"
        
        "‚ùì ’Ä’°÷Ä÷Å’•÷Ä ’∏÷Ç’∂’•÷Å’∏’≤ ’§’•’∫÷Ñ’∏÷Ç’¥ ’§’´’¥’•÷Ñ ’°’§’¥’´’∂’´’Ω’ø÷Ä’°’ø’∏÷Ä’´’∂:"
    )
    
    await update.message.reply_text(
        help_text,
        parse_mode="HTML",
        reply_markup=create_back_to_menu_keyboard()
    )

async def message_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    if not is_user_allowed(user_id):
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if user_id in ADMIN_IDS and context.user_data.get('waiting_for_user_id'):
        from .button_handlers import handle_user_id_input
        await handle_user_id_input(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if user_id in ADMIN_IDS and context.user_data.get('pay_step'):
        await handle_payment_step(update, context)
        return
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–∏–∞–ª–æ–≥–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –º–µ–Ω—é
    await update.message.reply_text(
        "ü§ñ ’ï’£’ø’°’£’∏÷Ä’Æ’•÷Ñ ÷Å’°’∂’Ø’® ÷Å’∏÷Ç÷Å’°’§÷Ä’æ’°’Æ ’£’∏÷Ä’Æ’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’∞’°’¥’°÷Ä:",
        reply_markup=create_main_menu(user_id)
    )

async def handle_payment_step(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —à–∞–≥–æ–≤ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    user_id = update.effective_user.id
    step = context.user_data.get('pay_step')
    
    if step == 'amount':
        try:
            amount = float(update.message.text.strip())
            context.user_data['pay_amount'] = amount
            context.user_data['pay_step'] = 'comment'
            
            display_name = context.user_data.get('pay_user')
            await update.message.reply_text(
                f"üí∞ ‘≥’∏÷Ç’¥’°÷Ä: {amount:,.2f} ’§÷Ä’°’¥\n"
                f"üë§ ’ç’ø’°÷Å’∏’≤: {display_name}\n\n"
                f"üìù ’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’¥’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂ (’Ø’°’¥ /skip’ù ’¢’°÷Å ’©’∏’≤’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä):"
            )
            
        except ValueError:
            await update.message.reply_text("‚ùå ’ç’≠’°’¨ ’£’∏÷Ç’¥’°÷Ä’´ ’±÷á’°’π’°÷É: ’Ñ’∏÷Ç’ø÷Ñ’°’£÷Ä’•÷Ñ ’©’´’æ:")
    
    elif step == 'comment':
        comment = update.message.text.strip() if update.message.text != '/skip' else ""
        
        display_name = context.user_data.get('pay_user')
        amount = context.user_data.get('pay_amount')
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
        # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        
        result_text = (
            f"‚úÖ ’é’≥’°÷Ä’∏÷Ç’¥’® ’£÷Ä’°’∂÷Å’æ’°’Æ ’ß:\n\n"
            f"üë§ ’ç’ø’°÷Å’∏’≤: {display_name}\n"
            f"üí∞ ‘≥’∏÷Ç’¥’°÷Ä: {amount:,.2f} ’§÷Ä’°’¥\n"
            f"üìù ’Ñ’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂: {comment or '’â’Ø’°'}\n"
            f"üìÖ ‘±’¥’Ω’°’©’´’æ: ‘±’µ’™’¥"
        )
        
        await update.message.reply_text(
            result_text,
            reply_markup=create_main_menu(user_id)
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        context.user_data.clear()
